'number' + 3 + 3:
//1. 'number' + 3 = 'number3' (Рядок додається до числа, яке конвертується в рядок)
//2. 'number3' + 3 = 'number33' (Рядок додається до числа, яке конвертується в рядок)
//Відповідь: 'number33'
null + 3:
//1. null + 3 = 3 (Оскільки null перетворюється на нуль, два числа додаються)
//Відповідь: 3
5 && "qwerty":
//1. Оскільки 5 є істинним, то оператор && перевіряє далі
//2. "qwerty" - також є істинним числом, тому буде повертатися це ж значення
//Відповідь: 'qwerty'
+'40' + +'2' + "hillel":
//1. +'40' - перетворює рядок на число 40
//2. +'2' - перетворює рядок на число 2
//3. +'40' + +'2' + "hillel" = 40 + 2 + "hillel" = 42 + "hillel" = "42hillel" (Додаємо число до рядка)
//Відповідь: '42hillel'
'10' - 5 === 6:
//1. '10' - 5 - (При здійсненні віднімання '10' сприймається як число) і тому результатом буде 5
//2. 5 === 6 - (Строге порівняння як значень, так і їх типів. Типи однакові, але значення не рівні, тому поверне false)
//Відповідь: false
true + false:
//true + false = 1 (При здійсненні такого додавання true перетворюється на 1, false перетворюється на 0, тому 1 + 0 = 1)
//Відповідь: 1
'4px' - 3:
//1. '4px' - (При здійсненні віднімання '4px' хоче перетворитися на число, але так як перетворення неможливе, тому так і залишається)
//2. '4px' - 3 = NaN (Будь-яка арифметична операція з нечисловим значенням повертає NaN)
//Відповідь: NaN
'4' - 3:
//1. '4' - При здійсненні віднімання '4' сприймається як число 4
//2. '4' - 3 = 1 (4-3=1)
//Відповідь: 1 
'6' + 3 ** 0:
//1. 3 ** 0 - (Будь-яке число в степені 0 буде давати результат 1)
//2. '6' + 1 = '61' - (Відбудеться конкатенація рядка і числа)
//Відповідь: '61'
12 / '6':
//1. '6' - При вичитанні сприймається як число 6
//2. 12 / '6' = 2
//Відповідь: 2
'10' + (5 === 6):
//1. Спочатку виконаємо - 5 === 6. Результатом буде - false, у звʼязку з тим, що типи однакові, але значення різні
//2. '10' + false = '10false' - (Відбудеться конкатенація рядка з boolean)
//Відповідь: '10false'  
null == '':
//null == '' - (Результатом буде false, у звʼязку з тим що null не дорівнює пустому рядку)
//Відповідь: false
3 ** (9 / 3):
//1. Спочатку робимо те що в дужках, 9 / 3 = 3
//2. 3 ** 3 = 27 - (3 у степені 3)
//відповідь: 27
!!'false' == !!'true':
//1. !!'false' - (Будь-який непустий рядок є істинним значенням, тому результатом буде true)
//2. !!'true' - (Аналогічно з першим)
//3. true == true - (Результат - true)
//Відповідь: true
0 || '0' && 1:
//1. 0 || '0' - (Результатом буде'0', оскільки логічне АБО вибирає перше істинне значення)
//2. '0' && 1 - (Результатом буде 1, оскільки логічне І повертає останнє істинне значення)
//Відповідь: 1
(+null == false) < 1:
//1. +null - перетворюється на 0
//2. 0 == false - (результатом буде true, оскільки false має значення теж 0)
//3. true < 1 - (результатом буде false, оскільки true перетворюється на 1, а 1 < 1 - це false)
//Відповідь: false
false && true || true:
//1. false && true - (результатом буде false, оскільки оператор І повертає true, тільки якщо обидва операнди є true. 
//Так як перший операнд є false, результат відразу ж стає false, не перевіряючи другий операнд)
//2. false || true - (результатом буде true, оскільки оператор OR повертає true, якщо хоча б один з операндів є true)
//Відповідь: true
false && (false || true):
//1. false || true - (результатом буде true, оскільки оператор OR повертає true, якщо хоча б один з операндів є true)
//2. false && true - (результатом буде false, оскільки оператор І повертає true, тільки якщо обидва операнди є true. 
//Так як перший операнд є false, результат відразу ж стає false, не перевіряючи другий операнд)
//Відповідь: false
(+null == false) < 1 ** 5:
//1. +null - перетворюється на 0
//2. 0 == false - (відбувається порівняння числа 0 з false, яке перетворюється також на 0, тому результат буде true)
//3. 1 ** 5 = 1 - (відбувається приведення до степеня, а 1 в степені 5 дорівнює 1)
//4. true < 1 - (результатом буде false, у звʼязку з тим що true перетворюється на 1, і 1 < 1 це не вірно, тому false)
//Відповідь: false
